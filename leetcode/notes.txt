0613:
----------------------------------------------------------------------------------------
***** single_number            : xor, A^B^B^A^C = C  
xx    climbing_stairs          : dynamic programming, similar with house_robber
xxx   rotate_array             : size changed after insert, should be udpated as well
p     same tree                : passed first time
p     path sum                 : passed first time
xxx   pascal triangle          : pascal formula v[i][j] = combination(i, j)
                                 v1 combination overflow
                                 v2 combination overflow solved by workaround
xxx   pascal triangle II       : v1 combination overflow again!
                                 v2 optimization combination and passed.
xxx   add two numbers            v1 [5]+[5] = 0, failed, expected: [0, 1]
                                 v2 [1]+[9,9]=0,10, failed, expected, [0, 0, 1]
                                 v3 loooooooop carry to the end

0614
----------------------------------------------------------------------------------------
xx    valid palindrome         : v1 missed to consider 0~9 in the string
                                 v2 corrected v1
pp    merge two sortedlist     : v1 passed 
                                 v2 more clean version from discussion forum
p     valid parentheses        : check stack size befor call top
p     remove nth from end      : remove nth node from end of list
xxx   rectangle area           : v1 side parameters not checked for common area
                                 v2 corrected for side para, but misuderstand problem
                                 v3 (areaA+areaB)-commonArea
xxx   palindrome number        : v1 negative number should return false
                                 v2 10 100 or similar should return false
                                 v3 corrected


0615
----------------------------------------------------------------------------------------
p     intersection_of_two_     : calc two linked lists length first
      linker_lists               then, len(A)-len(B), then...

xxx   string to integer        : v1 case "-+1" should return 0,
                                 v2 if overflow, then should return max or min int
                                 v3 passed

0616
----------------------------------------------------------------------------------------
xxxx  compare version number   : v1/2/3/4/5, need to check problem carefully. 
                                 please see the leetcode submission for detail fail.
0617
----------------------------------------------------------------------------------------
p     excel sheet column tile  : passed first time
xp    majority element         : v1 logic error!!!!
                                 v2 correct, it's very slow 
                                 v3 Basic idea of the algorithm is if we cancel out 
                                 each occurrence of an element e with all the other 
                                 elements that are different from e then e will 
                                 exist till end if it is a majority element. 
0618
----------------------------------------------------------------------------------------
xxx  factorial traiiling Zeros : v1 too slow
                                 v2 too slow
                                 v3 algo from the dicuss forum!!!!!!!!!!!!!!!!
p    excel sheet column number : passed first time

0619
----------------------------------------------------------------------------------------
p    zigzag conversion         : passed first time, but take 1.5 hours!!!!

0620 
----------------------------------------------------------------------------------------
p    roman to int              : passed first time, check requirement carefully
px   invert binary tree        : v1 passed first time, recurusive way
                                 v2 !!!!!!!!!!!!!! loop, weibo, zuoerdu
0621
----------------------------------------------------------------------------------------
xxx  contains duplicate II     : v1 time exceed, for for is too long
                                 v2 change it to map version, logic error
                                 v3 corrected.
xx   balanced binary tree      : v1 setjmp can't be used on LeetCode. 2 hours!!!!!!!!
                                 v2 use global variable.
xppx binary_tree_level_order_  : v1 typo error, missed j++
     traversal_II                v2 140ms, running time too long
                                 v3 16ms, better, remove merge function!
                                 v4 one solution from discusstion forum, clean
xp   maximum_depth_of_         : v1 why wrong?depth is the edge number or node number?
     binary_tree                 v2 node number!!!!!!!! see [1]
p    binary_tree_level_order_  : passed first time. Almost same with v4 of II
     traversal_I                    
p    symmetric_tree            : passed first time. use invert_binary_tree+same_tree     
     
0621
----------------------------------------------------------------------------------------
xxxx Implement strStr          : v1 logic erro and side check, case: "" ""
                                 v2 logic erro and case: "mississippi" "issip"
                                 v3 logic erro and case: "mississippi" "issi"
                                 v4 logic erro and case: "mississippi" "pi"
                                 v5 final corrected !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
xxx  merge sorted array        : v1 nums1 contain extra space for nums2
                                 v2 nums1 contain extra space for nums2 
                                 v3 corrected!!!, need to check problem carefully.
xx   remove_duplicates_from_   : v1 forget to check parameter "NULL"
     sorted_list                 v2 corrected.
p    valid_soduku              : passed first time. Use map and set, not very fast.
xxx  count_and_say             : v1 doesn't match the requirement
                                 v2 doesn't match the requirement
                                 v3 1, 11, 21, 1211, 111221, 312211, 13112221...
p    add_binary                : passed first time, not very clean.
xp   plus_one                  : v1 logic error !!!! add every digits one.....
                               : v2 corrected.
                                 
0624
----------------------------------------------------------------------------------------
xxxx Construct binary tree from: v3 take 4 hours to think the solution, finally get it.
     inorder and postorder          but using too many memory!!!!!!!!!!!!!!!
     traversal                   v4 less memory after optimization!
     
0627
----------------------------------------------------------------------------------------
!!!! contains duplicate III    : v1 for for solution, without consider abs()
                                 v2 for for solution, timing exceed
                                 v3 use multimap, side case
                                 v4 use multimap, side case
                                 v5 use multimap+lower_upper_bound, int exceed max value
                                 v6 use multimap+lower_upper_bound+long type 
p    binary tree preorder trav : passed first time  
p    linked list cycle         : passed first time
p    linked list cycle II      : passed first time, Need check again
     
0713
----------------------------------------------------------------------------------------
p    number of digit one       : passed frist time. take 2 hours.     
     
0716
----------------------------------------------------------------------------------------
p    reorder list              : passed frist time. stack
!!!! productOfArray except self: v1. Can't imagine the solution!!!!!!. 
     
0719
----------------------------------------------------------------------------------------
p    sorted array to BST       : passed first time. Binary Search Tree definition!
p    sorted list  to BST       : passed first time. Binary Search Tree definition!
p    Binary Search TreeIterator: passed first time. Stack
     
0720
----------------------------------------------------------------------------------------
p    kth smallest num in BTS   : passed first time. Stack. there are also Recrusive
                                 solution, please consider again!!!!!
xp   valiate binary search tree: v1 failed. no-stack. please check leetcode commit.
                                 v2 stack solution, success.
     
0721
----------------------------------------------------------------------------------------
xxp  unique-binary-search-trees: v1. timeout. think two night!!!!!
                                 v2. timeout. with vector
                                 v3. passed.  half of the iteration. 120ms. still slow
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
[1] http://stackoverflow.com/questions/2603692/what-is-the-difference-between-tree-depth-and-height
